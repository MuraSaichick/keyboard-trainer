import QtQuick 2.15
import QtQuick.Controls 2.15
import AuthManager

// –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
Rectangle {
    anchors.fill: parent
    color: themeManager.background

    AuthManager {
        id: loginUser
        onLoginError: {
            passwordLoginError.text = qsTr(error);

        }
    }

    AuthLanguageSelector {
            anchors.right: parent.right
            anchors.bottom: parent.bottom
            anchors.rightMargin: 16
            anchors.bottomMargin: 16
        }

    AuthThemeSwitch {
           anchors.right: parent.right
           anchors.top: parent.top
           anchors.rightMargin: 16
           anchors.topMargin: 16
       }

    Column {
        anchors.centerIn: parent
        spacing: 20

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        Text {
            id: welcomeText
            text: qsTr("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
            font.pixelSize: 32
            color: themeManager.text
            horizontalAlignment: Text.AlignHCenter
        }

        // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞
        TextField {
            id: usernameField
            placeholderText: qsTr("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω")
            font.pixelSize: 18
            color: themeManager.inputTextColor
            placeholderTextColor: themeManager.placeHolderText
            background: Rectangle {
                color: themeManager.inputBackground
                radius: 8
            }
            padding: 10
            width: parent.width * 0.6
        }

        Row {
            spacing: 10

            // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
            TextField {
                id: passwordField
                placeholderText: qsTr("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å")
                echoMode: TextInput.Password
                font.pixelSize: 18
                color: themeManager.inputTextColor
                placeholderTextColor: themeManager.placeHolderText
                background: Rectangle {
                    color: themeManager.inputBackground
                    radius: 8
                }
                padding: 10
                width: parent.width * 0.85
            }

            // –ö–Ω–æ–ø–∫–∞-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –ø–æ–∫–∞–∑–∞ –ø–∞—Ä–æ–ª—è
            MouseArea {
                id: togglePasswordVisibility
                width: 30
                height: 30
                Rectangle {
                    id: eyeButton
                    anchors.fill: parent
                    radius: 15
                    color: themeManager.inputBackground
                    border.color: themeManager.border
                }
                Text {
                    id: eyeIcon
                    text: passwordField.echoMode === TextInput.Password ? "üëÅ" : "üôà"
                    anchors.centerIn: parent
                    font.pixelSize: 18
                    color: themeManager.text
                }
                onClicked: {
                    passwordField.echoMode = passwordField.echoMode === TextInput.Password
                        ? TextInput.Normal
                        : TextInput.Password
                }
            }
        }

        // –ü–æ–ª–µ –æ—à–∏–±–∫–∏
        Item {
            width: parent.width * 0.75
            height: 10 // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –æ—à–∏–±–∫–∏
            visible: passwordLoginError.text.length > 0
            Text {
                id: passwordLoginError
                text: ""
                color: "red"
                anchors.left: parent.left
                visible: passwordLoginError.text.length > 0  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞
            }
        }

        Row {
            spacing: 10
            // –ö–∞—Å—Ç–æ–º–Ω–∞—è –≥–∞–ª–æ—á–∫–∞ "–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è"
            Rectangle {
                id: rememberMeCheckBox
                width: 24
                height: 24
                radius: 4
                color: checked ? themeManager.button : themeManager.inputBackground
                border.color: themeManager.border
                border.width: 2

                property bool checked: false

                MouseArea {
                    anchors.fill: parent
                    onClicked: {
                        rememberMeCheckBox.checked = !rememberMeCheckBox.checked
                    }
                }
                Behavior on color {
                    ColorAnimation {
                        duration: 200
                    }
                }
            }

            // –¢–µ–∫—Å—Ç —Ä—è–¥–æ–º —Å –≥–∞–ª–æ—á–∫–æ–π
            Text {
                id: rememberMeLabel
                text: qsTr("–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è")
                font.pixelSize: 18
                color: themeManager.text
                verticalAlignment: Text.AlignVCenter
            }
        }

        Row {
            spacing: 20

            // –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞
            Rectangle {
                id: loginButton
                width: 150
                height: 50
                color: themeManager.button
                radius: 8
                Text {
                    text: qsTr("–í–æ–π—Ç–∏")
                    color: themeManager.text
                    font.pixelSize: 18
                    anchors.centerIn: parent
                }
                MouseArea {
                    anchors.fill: parent
                    hoverEnabled: true
                    onEntered: parent.color = themeManager.buttonHoverColor
                    onExited: parent.color = themeManager.button
                    onClicked: {
                        if(loginUser.loginUser(usernameField.text, passwordField.text, rememberMeCheckBox.checked)) {
                            UserStats.loadFromDatabase(loginUser.userID()) // –ü–µ—Ä–µ–¥–∞–ª–∏ ID –ª–æ–≥–∏–Ω–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –µ–≥–æ –¥–∞–Ω–Ω—ã—Ö
                            pageLoader.source = "MainMenu.qml"
                        } else {
                            console.log("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤–æ–π—Ç–∏, —á—Ç–æ-—Ç–æ —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º")
                        }
                    }
                }
            }

            // –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            Rectangle {
                id: registerButton
                width: 180
                height: 50
                color: themeManager.button
                radius: 8
                Text {
                    text: qsTr("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
                    color: themeManager.text
                    font.pixelSize: 18
                    anchors.centerIn: parent
                }
                MouseArea {
                    anchors.fill: parent
                    hoverEnabled: true
                    onEntered: registerButton.color = themeManager.buttonHoverColor
                    onExited: registerButton.color = themeManager.button
                    onClicked: {
                        pageLoader.source = "RegisterScreen.qml"
                        console.log("–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
                    }
                }

            }
        }
    }
    Connections {
        target: themeManager
        function onColorsChanged() {
            registerButton.color = themeManager.button
            loginButton.color = themeManager.button
        }
    }
}
