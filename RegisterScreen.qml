import QtQuick 2.15
import QtQuick.Controls 2.15
import AuthManager

// –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
Rectangle {
    anchors.fill: parent
    color: themeManager.background

    AuthManager {
        id: registerUser
        onLoginErrorOccurred: {
                   // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—à–∏–±–∫—É, –æ—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –º–µ–Ω—è–µ–º placeHolderText –¥–ª—è –ª–æ–≥–∏–Ω–∞ –Ω–∞ –∫—Ä–∞—Å–Ω—ã–π
                   usernameErrorText.text = qsTr(error)
                   usernameField.border.color = "red"  // –ú–µ–Ω—è–µ–º –≥—Ä–∞–Ω–∏—Ü—É –Ω–∞ –∫—Ä–∞—Å–Ω—É—é
               }

        onPasswordErrorOccurred: {
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—à–∏–±–∫—É, –æ—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –º–µ–Ω—è–µ–º placeHolderText –¥–ª—è –ø–∞—Ä–æ–ª—è –Ω–∞ –∫—Ä–∞—Å–Ω—ã–π
            passwordErrorText.text = qsTr(error)
            passwordField.border.color = "red"  // –ú–µ–Ω—è–µ–º –≥—Ä–∞–Ω–∏—Ü—É –Ω–∞ –∫—Ä–∞—Å–Ω—É—é
        }
    }

    AuthLanguageSelector {
            anchors.right: parent.right
            anchors.bottom: parent.bottom
            anchors.rightMargin: 16
            anchors.bottomMargin: 16
        }

    AuthThemeSwitch {
           anchors.right: parent.right
           anchors.top: parent.top
           anchors.rightMargin: 16
           anchors.topMargin: 16
       }

    Column {
        anchors.centerIn: parent
        spacing: 20

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
        Text {
            id: registrationTitle
            text: qsTr("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
            font.pixelSize: 32
            color: themeManager.text
            horizontalAlignment: Text.AlignHCenter
        }

        // –ü–æ–ª–µ –¥–ª—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        TextField {
            id: usernameField
            placeholderText: qsTr("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            font.pixelSize: 18
            color: themeManager.inputTextColor
            placeholderTextColor: themeManager.placeHolderText
            background: Rectangle {
                color: themeManager.inputBackground
                radius: 8
            }
            padding: 10
            width: parent.width * 0.75
        }

        // –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –¥–ª—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        Item {
            width: parent.width * 0.75
            height: 10 // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –æ—à–∏–±–∫–∏
            visible: usernameErrorText.text.length > 0
            Text {
                id: usernameErrorText
                text: ""
                color: "red"
                anchors.left: parent.left
            }
        }

        // –°—Ç—Ä–æ–∫–∞: –ø–æ–ª–µ "–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å" + –≥–ª–∞–∑–∏–∫ —Å–ø—Ä–∞–≤–∞
        Row {
            width: parent.width
            spacing: 10

            // –ü–æ–ª–µ –¥–ª—è –ø–∞—Ä–æ–ª—è
            TextField {
                id: passwordField
                placeholderText: qsTr("–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å")
                echoMode: TextInput.Password
                font.pixelSize: 18
                color: themeManager.inputTextColor
                placeholderTextColor: themeManager.placeHolderText
                background: Rectangle {
                    color: themeManager.inputBackground
                    radius: 8
                }
                padding: 10
                width: parent.width * 0.75 // –£–±–∏—Ä–∞–µ–º 50 –ø–∏–∫—Å–µ–ª–µ–π –Ω–∞ –≥–ª–∞–∑–∏–∫
            }

            // –ö–Ω–æ–ø–∫–∞-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è (–ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ —Å–ø—Ä–∞–≤–∞)
            MouseArea {
                id: togglePasswordVisibility
                width: 30
                height: 30
                Rectangle {
                    id: eyeButton
                    anchors.fill: parent
                    radius: 20
                    color: themeManager.inputBackground
                    border.color: themeManager.border
                }
                Text {
                    id: eyeIcon
                    text: passwordField.echoMode === TextInput.Password ? "üëÅ" : "üôà"
                    anchors.centerIn: parent
                    font.pixelSize: 20
                    color: themeManager.text
                }
                onClicked: {
                    let newMode = passwordField.echoMode === TextInput.Password ? TextInput.Normal : TextInput.Password
                    passwordField.echoMode = newMode
                    confirmPasswordField.echoMode = newMode
                }
            }
        }
        Item {
            width: parent.width * 0.75
            height: 10 // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –æ—à–∏–±–∫–∏
            visible: passwordErrorText.text.length > 0
            Text {
                id: passwordErrorText
                text: ""
                color: "red"
                anchors.left: parent.left
                visible: passwordErrorText.text.length > 0  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞
            }
        }


        // –ü–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
        TextField {
            id: confirmPasswordField
            placeholderText: qsTr("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
            echoMode: TextInput.Password
            font.pixelSize: 18
            color: themeManager.inputTextColor
            placeholderTextColor: themeManager.placeHolderText
            background: Rectangle {
                color: themeManager.inputBackground
                radius: 8
            }
            padding: 10
            width: parent.width * 0.75
        }

        // –ö–Ω–æ–ø–∫–∏: –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –í–µ—Ä–Ω—É—Ç—å—Å—è
        Row {
            spacing: 20

            // –ö–Ω–æ–ø–∫–∞ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"
            Rectangle {
                id: registerButton
                width: 180
                height: 50
                color: themeManager.button
                radius: 8
                Text {
                    text: qsTr("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
                    color: themeManager.text
                    font.pixelSize: 18
                    anchors.centerIn: parent
                    wrapMode: Text.WordWrap
                    horizontalAlignment: Text.AlignHCenter
                }
                MouseArea {
                    anchors.fill: parent
                    hoverEnabled: true
                    onEntered: parent.color = themeManager.buttonHoverColor
                    onExited: parent.color = themeManager.button
                    onClicked: {
                        if(registerUser.registerUser(usernameField.text, passwordField.text, confirmPasswordField.text)) {
                            console.log("–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " , usernameField.text, " —Å –ø–∞—Ä–æ–ª–µ–º ", passwordField.text)
                            pageLoader.source = "LoginScreen.qml"
                        } else {
                            console.log("—á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞—Ä–µ–≥–∞—Ç—å—Å—è")
                        }
                    }
                }
            }

            // –ö–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è"
            Rectangle {
                id: backButton
                width: 180
                height: 50
                color: themeManager.button
                radius: 8
                Text {
                    text: qsTr("–í–µ—Ä–Ω—É—Ç—å—Å—è")
                    color: themeManager.text
                    font.pixelSize: 18
                    anchors.centerIn: parent
                    wrapMode: Text.WordWrap
                    horizontalAlignment: Text.AlignHCenter
                }
                MouseArea {
                    anchors.fill: parent
                    hoverEnabled: true
                    onEntered: parent.color = themeManager.buttonHoverColor
                    onExited: parent.color = themeManager.button
                    onClicked: {
                        pageLoader.source = "LoginScreen.qml"
                        console.log("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫–æ –≤—Ö–æ–¥—É")
                    }
                }
            }
        }
    }
    Connections {
        target: themeManager
        function onColorsChanged() {
            registerButton.color = themeManager.button
            backButton.color = themeManager.button
        }
    }
}

